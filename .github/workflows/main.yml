# .github/workflows/main.yml

name: Build EasyScanlate with Nuitka

# Workflow Trigger
on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release-windows:
    runs-on: windows-latest 
    permissions:
      contents: write

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cu128
          pip install -r requirements.txt 

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py 
          mode: standalone
          include-data-dir: |
            OCR/model=OCR/model
            assets=assets
          mingw64: true
          enable-plugins: pyside6
          windows-icon-from-ico: assets/app_icon.ico
          company-name: "Liiesl"
          product-name: "EasyScanlate"
          file-description: "EasyScanlate"
          file-version: "1.0.0.0"
          product-version: "1.0.0.0"

      - name: Zip and Split PyTorch Libraries with 7-Zip
        run: |
          cd build/main.dist
          7z a -t7z -mx=9 -mf=off -v300m ..\..\torch_libs.7z torch
          cd ..\..
        shell: pwsh

      - name: Upload PyTorch Library Parts as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: torch_libs_parts
          path: torch_libs.7z.*

      - name: Zip Full Build Output (Without PyTorch)
        run: |
          cd build/main.dist
          7z a -t7z -mx=9 -mf=off ..\..\build_output.7z * -xr!torch
          cd ..\..
        shell: pwsh

      - name: Upload Full Build Output as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: full-build-output
          path: build_output.7z

      - name: Install NSIS
        run: choco install nsis
      
      - name: Add NSIS to PATH
        run: echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh

      - name: Update Installer Version from Tag
        run: |
          $tagVersion = "${{ github.ref_name }}".Substring(1)
          $filePath = "dev/installer/installer.nsi"
          (Get-Content $filePath) -replace '(!define APP_VERSION ").*(")', "`$1$tagVersion`$2" | Set-Content $filePath
          echo "Installer version set to $tagVersion"
        shell: pwsh

      - name: Compile NSIS installer
        run: makensis dev\installer\installer.nsi

      - name: Move Installer to Root Directory
        run: Move-Item -Path dev/installer/EasyScanlate-Installer.exe -Destination .
        shell: pwsh

      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: EasyScanlate-Installer.exe

      - name: Create Draft GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: true 
          preserve_order: true
          body_path: changelog.md
          # Upload both the installer and all the library parts to the release
          files: |
            EasyScanlate-Installer.exe
            torch_libs.7z.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}