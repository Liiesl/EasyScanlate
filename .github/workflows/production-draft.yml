name: Build and Release MangaOCRTool

# Workflow Trigger
on:
  push:
    branches:
      - production-workflow

jobs:
  build-and-release-windows:
    runs-on: windows-latest

    steps:
      # 1. Get the code from repository
      - name: Check-out repository
        uses: actions/checkout@v4

      # 2. Set up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3. Install project's dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
          pip install -r requirements.txt

      # 4. Run Nuitka build
      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          mode: standalone
          include-data-dir: 'EasyOCR/model=EasyOCR/model'
          mingw64: true
          enable-plugins: pyside6
          windows-icon-from-ico: launcher/app_icon.ico
          company-name: "YourCompany"
          product-name: "MangaOCRTool"
          file-description: "ManhwaOCR"
          file-version: "1.0.0.0"
          product-version: "1.0.0.0"

      # 5. Create a ZIP archive of the PyTorch libraries with best compression
      - name: Zip PyTorch Libraries with 7-Zip
        run: |
          cd build/main.dist
          7z a -tzip -mx=9 ..\..\pytorch-libs.zip torch
          cd ..\..
        shell: pwsh

      # Upload PyTorch ZIP as a workflow artifact
      - name: Upload PyTorch Libraries as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pytorch-libs
          path: pytorch-libs.zip

      # Compile the NSIS installer FIRST ---
      - name: Install NSIS
        run: choco install nsis

      - name: Compile NSIS installer
        run: makensis /DLATEST_TAG=${{ github.ref_name }} assets/installer.nsi

      # CHANGE 4: Upload Installer as a workflow artifact
      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: MangaOCRTool-Installer.exe

      # Create a DRAFT GitHub Release for manual review
      - name: Create Draft GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          # The tag_name now comes directly from the event that triggered the workflow
          tag_name: ${{ github.ref_name }}
          draft: true 
          preserve_order: true
          body_path: changelog.md
          # Upload both files to the release page
          files: |
            MangaOCRTool-Installer.exe
            pytorch-libs.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}