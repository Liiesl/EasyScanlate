name: Build and Release MangaOCRTool

#
# --- CHANGE 1: Workflow Trigger ---
# This workflow now runs ONLY when you push a tag matching the pattern 'v*.*.*'
# For example: v1.0.0, v1.2.3, v2.0.0-beta1
#
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release-windows:
    runs-on: windows-latest

    steps:
      # 1. Get the code from repository
      - name: Check-out repository
        uses: actions/checkout@v4

      # 2. Set up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3. Install project's dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
          pip install -r requirements.txt

      # 4. Run Nuitka build
      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          mode: standalone
          include-data-dir: 'model=model'
          mingw64: true
          enable-plugins: pyside6
          windows-icon-from-ico: launcher/app_icon.ico
          company-name: "YourCompany"
          product-name: "MangaOCRTool"
          file-description: "ManhwaOCR"
          file-version: "1.0.0.0"
          product-version: "1.0.0.0"

      # 5. Create a ZIP archive of the PyTorch libraries
      - name: Zip PyTorch Libraries
        run: |
          cd build/main.dist
          powershell Compress-archive -Path torch -DestinationPath ..\..\pytorch-libs.zip
          cd ..\..
        shell: pwsh

      #
      # --- CHANGE 2: Compile the NSIS installer FIRST ---
      # We now use `github.ref_name` which contains the tag that triggered the workflow.
      #
      - name: Install NSIS
        run: choco install nsis

      - name: Compile NSIS installer
        run: makensis /DLATEST_TAG=${{ github.ref_name }} assets/installer.nsi

      #
      # --- CHANGE 3: Create a single, unified GitHub Release ---
      # This step creates a new release based on the tag and uploads BOTH the installer
      # and the PyTorch libraries as assets to that one release.
      #
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          # The tag_name now comes directly from the event that triggered the workflow
          tag_name: ${{ github.ref_name }}
          # Upload both files to the release page
          files: |
            MangaOCRTool-Installer.exe
            pytorch-libs.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}